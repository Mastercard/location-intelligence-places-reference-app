/*
 *  Copyright (c) 2020 Mastercard
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.mastercard.placesreferenceapplication.services;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonParser;
import org.openapitools.client.model.MerchantCategoryCode;
import org.openapitools.client.model.MerchantIndustryCode;
import org.openapitools.client.model.PagedMerchantCategoryCode;
import org.openapitools.client.model.PagedMerchantIndustryCode;
import org.openapitools.client.model.PagedPlaceInfo;
import org.openapitools.client.model.PlaceInfo;
import org.openapitools.client.model.PlaceSearchRequest;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

//These Imports are generated by an openAPI's generator on build.
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.api.MerchantCategoryCodesApi;
import org.openapitools.client.api.MerchantIndustryCodesApi;
import org.openapitools.client.api.PlacesApi;

@Service
public class DefaultPlaceService implements PlaceService {
    private static final Logger logger = LoggerFactory.getLogger(DefaultPlaceService.class);

    private MerchantIndustryCodesApi merchantIndustryCodesApi;
    private MerchantCategoryCodesApi merchantCategoryCodesApi;
    private PlacesApi placesApi;


    @Autowired
    public DefaultPlaceService(ApiClient apiClient) {
        logger.info("-->> INITIALIZING APIS");
        merchantIndustryCodesApi = new MerchantIndustryCodesApi(apiClient);
        merchantCategoryCodesApi = new MerchantCategoryCodesApi(apiClient);
        placesApi = new PlacesApi(apiClient);
    }

    public PagedMerchantCategoryCode getMccCodes(int limit, int offset, String sort) throws ApiException {
        return merchantCategoryCodesApi.getAllMerchantCategoryCodesUsingGet(limit, offset, sort);
    }

    public MerchantCategoryCode getMccByCode(String mccCode) throws ApiException {
        return merchantCategoryCodesApi.getByMccCodeUsingGET(mccCode);
    }

    public PagedMerchantIndustryCode getIndustryCodes(int limit, int offset, String sort) throws ApiException {

        return merchantIndustryCodesApi.getAllIndustryCodesUsingGET(limit, offset, sort);
    }

    public MerchantIndustryCode getIndustryByCode(String industryCode) throws ApiException {
        return merchantIndustryCodesApi.getByIndustryUsingGET(industryCode);
    }

    public PlaceInfo getLocationDetails(long locationId) throws ApiException {
        return placesApi.getPlaceByLocationIdUsingGET(locationId);
    }

    public PagedPlaceInfo postPlacesSearch(PlaceSearchRequest placeSearchRequestInfo, int limit, int offset) throws ApiException {
        return placesApi.searchPlacesUsingPOST(placeSearchRequestInfo, limit, offset);
    }

    public String getErrorAttributes(Exception e) {
        String errorDetails;
        if(e instanceof ApiException) {
            ApiException apiException = ((ApiException) e);

            //Attempt to parse as JSON
            try {
                Gson gson = new GsonBuilder().setPrettyPrinting().create();
                errorDetails = gson.toJson(JsonParser.parseString(apiException.getResponseBody()));

            } catch (Exception ignoredException) {

                //Print full string in case of not JSON
                errorDetails = apiException.getResponseBody();
            }

        } else {

            logger.error("Error occurred!",e);
            errorDetails = e.toString();

        }

        return errorDetails;
    }
}
